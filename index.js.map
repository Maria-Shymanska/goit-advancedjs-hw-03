{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '34465474-c3837bc3938f4efd53294c219';\nconst BASE_URL = 'https://pixabay.com/api';\n\n\nexport const fetchImages = async (query) => {\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  });\n\n  const url = `${BASE_URL}/?${params.toString()}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\n\nconst loadImage = src => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = src;\n    img.onload = () => resolve(src);\n    img.onerror = error => reject(error);\n  });\n};\n\nexport const renderImages = async images => {\n  gallery.innerHTML = '';\n\n  try {\n    const imagePromises = images.map(image => loadImage(image.webformatURL));\n    await Promise.all(imagePromises);\n\n    gallery.innerHTML = images\n      .map(\n        image => `\n          <a href=\"${image.largeImageURL}\" class=\"gallery-item\">\n            <img src=\"${image.webformatURL}\" alt=\"${image.tags}\">\n            <div class=\"info\">\n              <div><p>Likes</p><p>${image.likes}</p></div>\n              <div><p>Views</p><p>${image.views}</p></div>\n              <div><p>Comments</p><p>${image.comments}</p></div>\n              <div><p>Downloads</p><p>${image.downloads}</p></div>\n            </div>\n          </a>`\n      )\n      .join('');\n\n    const lightbox = new SimpleLightbox('.gallery a', {\n      captions: true,\n      captionsData: 'alt',\n      captionPosition: 'bottom',\n      animationSpeed: 250,\n      fadeSpeed: 250,\n    });\n    lightbox.refresh();\n  } catch (error) {\n    showNotification('Failed to load images. Please try again.');\n  }\n};\n\nexport const showNotification = message => {\n  iziToast.error({\n    message: message,\n    position: 'topRight',\n    color: '#EF4040',\n    messageColor: 'white',\n    iconColor: 'white',\n    timeout: 10000, // Changed to 10 seconds\n  });\n};\n","import { fetchImages } from './js/pixabay-api';\nimport { renderImages, showNotification } from './js/render-functions';\n\nconst form = document.querySelector('.search-form');\nconst input = document.querySelector('.search-form input[name=\"search\"]');\nconst submitButton = document.querySelector('.search-form button[type=\"submit\"]');\nconst loader = document.querySelector('.loader');\n\nconst handleSubmitForm = async event => {\n  event.preventDefault();\n  const query = input.value.trim();\n\n  if (!query) {\n    showNotification('Please enter a search query.');\n    return;\n  }\n\n  // Блокуємо кнопку і показуємо лоадер\n  submitButton.disabled = true;\n  loader.style.display = 'flex';\n\n  try {\n    const data = await fetchImages(query);\n\n    if (data.hits.length === 0) {\n      showNotification(\n        'Sorry, there are no images matching your search query. Please try again!'\n      );\n    } else {\n      await renderImages(data.hits);\n    }\n  } catch (error) {\n    showNotification(\n      'An error occurred while fetching images. Please try again later.'\n    );\n    console.error('Error fetching images:', error); // Логування помилки для діагностики\n  } finally {\n    loader.style.display = 'none'; // Приховуємо лоадер\n    submitButton.disabled = false; // Розблокуємо кнопку\n    form.reset(); \n  }\n};\n\nform.addEventListener('submit', handleSubmitForm);\n"],"names":["API_KEY","BASE_URL","fetchImages","query","params","url","response","error","gallery","loadImage","src","resolve","reject","img","renderImages","images","imagePromises","image","SimpleLightbox","showNotification","message","iziToast","form","input","submitButton","loader","handleSubmitForm","event","data"],"mappings":"6vBAAA,MAAMA,EAAU,qCACVC,EAAW,0BAGJC,EAAc,MAAOC,GAAU,CAC1C,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAG,EAEKE,EAAM,GAAGJ,CAAQ,KAAKG,EAAO,SAAU,CAAA,GAE7C,GAAI,CACF,MAAME,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,6BAA6B,EAG/C,OADa,MAAMA,EAAS,MAE7B,OAAQC,EAAO,CACd,MAAMA,CACP,CACH,ECpBMC,EAAU,SAAS,cAAc,UAAU,EAE3CC,EAAYC,GACT,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,MAAMC,EAAM,IAAI,MAChBA,EAAI,IAAMH,EACVG,EAAI,OAAS,IAAMF,EAAQD,CAAG,EAC9BG,EAAI,QAAUN,GAASK,EAAOL,CAAK,CACvC,CAAG,EAGUO,EAAe,MAAMC,GAAU,CAC1CP,EAAQ,UAAY,GAEpB,GAAI,CACF,MAAMQ,EAAgBD,EAAO,IAAIE,GAASR,EAAUQ,EAAM,YAAY,CAAC,EACvE,MAAM,QAAQ,IAAID,CAAa,EAE/BR,EAAQ,UAAYO,EACjB,IACCE,GAAS;AAAA,qBACIA,EAAM,aAAa;AAAA,wBAChBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,oCAE1BA,EAAM,KAAK;AAAA,oCACXA,EAAM,KAAK;AAAA,uCACRA,EAAM,QAAQ;AAAA,wCACbA,EAAM,SAAS;AAAA;AAAA,eAGhD,EACA,KAAK,EAAE,EAEO,IAAIC,EAAe,aAAc,CAChD,SAAU,GACV,aAAc,MACd,gBAAiB,SACjB,eAAgB,IAChB,UAAW,GACjB,CAAK,EACQ,QAAO,CACjB,MAAe,CACdC,EAAiB,0CAA0C,CAC5D,CACH,EAEaA,EAAmBC,GAAW,CACzCC,EAAS,MAAM,CACb,QAASD,EACT,SAAU,WACV,MAAO,UACP,aAAc,QACd,UAAW,QACX,QAAS,GACb,CAAG,CACH,ECzDME,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAQ,SAAS,cAAc,mCAAmC,EAClEC,EAAe,SAAS,cAAc,oCAAoC,EAC1EC,EAAS,SAAS,cAAc,SAAS,EAEzCC,EAAmB,MAAMC,GAAS,CACtCA,EAAM,eAAc,EACpB,MAAMxB,EAAQoB,EAAM,MAAM,KAAI,EAE9B,GAAI,CAACpB,EAAO,CACVgB,EAAiB,8BAA8B,EAC/C,MACD,CAGDK,EAAa,SAAW,GACxBC,EAAO,MAAM,QAAU,OAEvB,GAAI,CACF,MAAMG,EAAO,MAAM1B,EAAYC,CAAK,EAEhCyB,EAAK,KAAK,SAAW,EACvBT,EACE,0EACR,EAEM,MAAML,EAAac,EAAK,IAAI,CAE/B,OAAQrB,EAAO,CACdY,EACE,kEACN,EACI,QAAQ,MAAM,yBAA0BZ,CAAK,CACjD,QAAY,CACRkB,EAAO,MAAM,QAAU,OACvBD,EAAa,SAAW,GACxBF,EAAK,MAAK,CACX,CACH,EAEAA,EAAK,iBAAiB,SAAUI,CAAgB"}